name: Deploy to AWS Lightsail with GHCR

on:
  push:
    branches:
      - main  # Trigger workflow on push to main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/opinion-mining:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into AWS Lightsail and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            set -e  # Exit immediately if a command fails
            
            # Show current state
            echo "Current Docker containers:"
            docker ps -a
            
            echo "Current Docker images:"
            docker images
            
            # Clean up all unused Docker resources
            echo "Cleaning up unused Docker resources..."
            docker system prune -af --volumes
            
            # Clean up build cache
            echo "Cleaning build cache..."
            docker builder prune -af
            
            # Show disk usage after cleanup
            echo "Disk usage after cleanup:"
            docker system df
            df -h /
            
            # Continue with deployment
            echo "Logging in to Docker registry..."
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Verify login was successful
            if [ $? -ne 0 ]; then
              echo "Docker login failed"
              exit 1
            fi
            
            echo "Pulling latest image..."
            docker pull ghcr.io/${{ github.repository_owner }}/opinion-mining:latest
            
            # Verify pull was successful
            if [ $? -ne 0 ]; then
              echo "Docker pull failed"
              exit 1
            fi
            
            echo "Stopping and removing existing container..."
            docker stop opinion-mining-container || true
            docker rm opinion-mining-container || true
            
            # Check if .env file exists
            if [ ! -f "$HOME/.env" ]; then
              echo "Warning: .env file not found in home directory. Creating a minimal one."
              echo "FLASK_APP=application/app.py" > $HOME/.env
              echo "FLASK_ENV=production" >> $HOME/.env
            fi
            
            echo "Starting new container..."
            docker run -p 5001:5001 --env-file $HOME/.env --restart unless-stopped -d --name opinion-mining-container ghcr.io/${{ github.repository_owner }}/opinion-mining:latest
            
            # Verify container is running
            if ! docker ps | grep -q opinion-mining-container; then
              echo "Container failed to start"
              echo "Container logs:"
              docker logs opinion-mining-container
              exit 1
            fi
            
            echo "Deployment complete. Container is running:"
            docker ps | grep opinion-mining-container
