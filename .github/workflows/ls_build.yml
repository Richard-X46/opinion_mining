name: Deploy to AWS Lightsail with GHCR

on:
  push:
    branches:
      - main  # Trigger workflow on push to main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        run: docker buildx create --use

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker Image
        run: docker buildx build --platform linux/amd64,linux/arm64 --no-cache -t ghcr.io/${{ github.repository_owner }}/opinion-mining:latest --push .

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into AWS Lightsail and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            # Clean up all unused Docker resources
            echo "Cleaning up unused Docker resources..."
            docker system prune -af --volumes
            
            # Remove all unused images
            echo "Removing all unused images..."
            docker rmi $(docker images -q) -f || true
            
            # Clean up build cache
            echo "Cleaning build cache..."
            docker builder prune -af
            
            # Show disk usage after cleanup
            echo "Disk usage after cleanup:"
            docker system df
            df -h /
            
            # Continue with deployment
            echo "Logging in to Docker registry..."
            docker login ghcr.io -u ${{ github.actor }} --password-stdin <<< "${{ secrets.GHCR_TOKEN }}"
            
            echo "Pulling latest image..."
            docker pull ghcr.io/${{ github.repository_owner }}/opinion-mining:latest
            
            echo "Stopping and removing existing container..."
            if docker ps -q --filter "name=opinion-mining-container"; then
              docker stop opinion-mining-container
              docker rm opinion-mining-container
            fi
            
            echo "Starting new container..."
            docker run -p 5001:5001 --env-file .env -d --name opinion-mining-container ghcr.io/${{ github.repository_owner }}/opinion-mining:latest
            
            echo "Deployment complete."